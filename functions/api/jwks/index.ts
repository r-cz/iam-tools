
import type { PagesFunction } from '@cloudflare/workers-types';

/**
 * This function provides a JSON Web Key Set (JWKS) for validating
 * demo tokens generated by the token inspector tool.
 * 
 * The JWKS contains a public key that corresponds to the private key
 * used to sign the example tokens.
 */
export const onRequest: PagesFunction = async (context) => {
  // RSA public key in JWK format
  // This is the public part of a key pair, with the private key being used
  // to sign example tokens in the token inspector tool
  const jwks = {
    keys: [
      {
        kty: "RSA",
        kid: "demo-key-2025",
        use: "sig",
        alg: "RS256",
        // These are the JWK parameters for the public key
        // Generated offline to match our private key
        n: "tqWVYpI3HVNmJ1quaLmOVADZG9F9aP3Kgp6Tm9RCLCQsNLLa3B1mTM8jgBwWSyGOcGkNYBHGMSo0iy_FYD8H7Jl9HQEQ5oGHd5T6jUUUfvQcHkGb5aWKVkrP7Wur8NZ0w_4WR_yjZ97QklFZ9iXOV1UEwjbYPsoxo5OhJUvW3J5J_ND2sB0nhvyYfX9Vjaz9M0BbBABeqVV1h49OQWVETDnC9A7MM7rlQ14wFWpdXnbDgIgV2CA98L6z7sjm9dKF38qVlwImJWI2JFl_rELsqFVMDutj0_AO6nZ_S-wGFD-FcB0Nkd6gKVskMkO1mLnJRuW_afBWgCLbbgb2nQsYoQ",
        e: "AQAB",
      }
    ]
  };

  // Set the correct response headers
  const headers = {
    "Content-Type": "application/json",
    "Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Methods": "GET, OPTIONS",
    "Access-Control-Allow-Headers": "Content-Type",
    "Cache-Control": "no-cache, no-store, must-revalidate" // Prevent caching issues during development
  };

  // Add debugging headers in development mode
  const url = new URL(context.request.url);
  if (url.hostname.includes("localhost")) {
    headers["X-Debug-Info"] = "JWKS endpoint called in development mode";
    headers["X-Key-Count"] = jwks.keys.length.toString();
    headers["X-Key-ID"] = jwks.keys[0].kid;
  }

  return new Response(JSON.stringify(jwks, null, 2), { headers });
};
